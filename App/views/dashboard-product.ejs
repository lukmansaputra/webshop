
<div class="min-h-screen flex">
    <%- include("./components/sidebar-dashboard") %>
        <%- include("./components/topbar-dashboard") %>

<!-- Modal toggle -->
 <div class="px-10 py-10 mx-auto">

   <a href="/dashboard/product/new-product"  class="inline-block text-white bg-blue-600 cursor-pointer hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800" type="button">
     Add New Product
   </a>
       <div class="relative overflow-x-auto shadow-md sm:rounded-lg mt-5 mb-10">
           <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
               <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                   <tr>
                       <th scope="col" class="px-6 py-3">
                           No
                       </th>
                       <th scope="col" class="px-6 py-3">
                           Product name
                       </th>
                       <th scope="col" class="px-6 py-3">
                           Slug
                       </th>
                       <th scope="col" class="px-6 py-3">
                           Category
                       </th>
                       <th scope="col" class="px-6 py-3">
                           Price
                       </th>
                       <th scope="col" class="px-6 py-3">
                           Action
                       </th>
                   </tr>
               </thead>
               <tbody>
               <% if (data && data.length > 0) { %>
                 <% let a = 1; %>
                 <% data.forEach(product => { %>
                   <tr id="product-<%= product.id %>" class="bg-white border-b hover:bg-gray-50">
                     <th class="px-6 py-4 font-medium"><%= a++ %></th>
                     <td class="px-6 py-4"><%= product.name %></td>
                     <td class="px-6 py-4"><%= product.slug %></td>
                     <td class="px-6 py-4"><%= product.category_name %></td>
                     <td class="px-6 py-4"><%= product.price %></td>
                     <td class="px-6 py-4 text-start">
                       <a href="/dashboard/product/edit-product/<%= product.id %>" class="text-blue-600 hover:underline me-2">Edit</a>
                       <button class="remove-btn text-red-600 hover:underline" data-id="<%= product.id %>">Remove</button>
                     </td>
                   </tr>
                 <% }); %>
               <% } %>
             </tbody>
           </table>
       </div>
       
   
   
   <!-- Main modal -->
   <div id="authentication-modal" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
       <div class="relative p-4 w-full max-w-md max-h-full">
           <!-- Modal content -->
           <div class="relative bg-white rounded-lg shadow-sm dark:bg-gray-700">
               <!-- Modal header -->
               <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600 border-gray-200">
                   <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
                       Add New Product
                   </h3>
                   <button type="button" class="end-2.5  cursor-pointer text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-hide="authentication-modal">
                       <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                           <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                       </svg>
                       <span class="sr-only">Close modal</span>
                   </button>
               </div>
               <!-- Modal body -->
               <div class="p-4 md:p-5">
                   <form class="space-y-4" action="#">
                       <div>
                           <label for="product_name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Product name</label>
                           <input type="product_name" name="product_name" id="product_name" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" placeholder="Example product name" required />
                       </div>
                       <div>
                         <label for="category_id" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Category</label>
                         <select id="category_id" name="category_id" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" required>
                           <% categories.forEach(category => { %>
                             <option value="<%= category.id %>"><%= category.name %></option>
                           <% }) %>
                             <option value="new">+ Tambah Kategori Baru</option>
                         </select>
                       </div>
   
                       <div>
                           <label for="slug" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Product slug</label>
                           <input type="slug" name="slug" id="slug" placeholder="Slug adalah id dari product yang sifatnya unik" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" required />
                       </div>
                       <div>
                           <label for="price" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Product price</label>
                           <input type="price" name="price" id="price" placeholder="Product price" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" required />
                       </div>
                       <div>                              
                           <label for="description" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Product description</label>
                           <textarea id="description" rows="4" class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Write your thoughts here..."></textarea>
                       </div>
                       <div>
                          <div>
                           <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white" for="file_input">Upload multiple images</label>
                           <input multiple id="file_input" type="file" class="py-2 px-2 block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400" accept="image/*">
                           <p class="mt-1 text-sm text-gray-500 dark:text-gray-300">You can upload multiple PNG, JPG or JPEG images.</p>
                           </div>
   
                           <!-- Preview area -->
                           <div id="preview" class="flex flex-wrap gap-3 mt-4"></div>
                       </div>
                      
                       <button type="submit" class="w-full text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Submit</button>
                   </form>
               </div>
           </div>
       </div>
   </div> 
   
   <!-- Modal tambah kategori -->
   <div id="category-modal" tabindex="-1" aria-hidden="true" class="hidden fixed inset-0 z-50 flex items-center justify-center bg-black/50">
     <div class="bg-white rounded-lg p-5 max-w-md w-full">
       <div class="flex justify-between items-center mb-4">
         <h3 class="text-xl font-semibold">Tambah Kategori Baru</h3>
         <button type="button" class="text-gray-500 hover:text-gray-700" onclick="toggleCategoryModal(false)">Ã—</button>
       </div>
       <form id="category-form">
         <label for="new_category_name" class="block mb-2 font-medium">Nama Kategori</label>
         <input type="text" id="new_category_name" name="new_category_name" required class="w-full p-2 border rounded" placeholder="Masukkan nama kategori baru" />
         <div class="mt-4 flex justify-end gap-2">
           <button type="button" class="px-4 py-2 bg-gray-300 rounded hover:bg-gray-400" onclick="toggleCategoryModal(false)">Batal</button>
           <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">Simpan</button>
         </div>
       </form>
     </div>
   </div>
 </div>
         <%- include("./components/bottombar-dashboard") %>



</div>

<script>
  const categorySelect = document.getElementById("category_id");
const categoryModal = document.getElementById("category-modal");
const categoryForm = document.getElementById("category-form");

function toggleCategoryModal(show) {
  if (show) {
    categoryModal.classList.remove("hidden");
  } else {
    categoryModal.classList.add("hidden");
    categoryForm.reset();
    categorySelect.value = ""; // reset pilihan jika batal
  }
}

categorySelect.addEventListener("change", () => {
  if (categorySelect.value === "new") {
    toggleCategoryModal(true);
  }
});

categoryForm.addEventListener("submit", (e) => {
  e.preventDefault();
  const newCategoryName = document.getElementById("new_category_name").value.trim();
  if (!newCategoryName) return alert("Nama kategori tidak boleh kosong");

  // Contoh: kirim data ke backend untuk simpan kategori baru
  fetch("/dashboard/product-list/add-category", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ name: newCategoryName }),
  })
    .then((res) => {
      if (!res.ok) throw new Error("Gagal menambahkan kategori");
      return res.json();
    })
    .then((data) => {
      alert("Kategori berhasil ditambahkan!");
      toggleCategoryModal(false);

      // Tambahkan kategori baru ke dropdown
      const option = document.createElement("option");
      option.value = data.id; // pastikan backend mengembalikan ID kategori baru
      option.textContent = data.name;
      // Insert sebelum opsi "Tambah Kategori Baru"
      categorySelect.insertBefore(option, categorySelect.querySelector('option[value="new"]'));
      categorySelect.value = data.id; // langsung pilih kategori baru
    })
    .catch((err) => alert(err.message));
});

</script>
<script>
  const fileInput = document.getElementById("file_input");
  const previewContainer = document.getElementById("preview");
  let selectedFiles = [];

  const maxFiles = 5; // Batas maksimal file (opsional)

  fileInput.addEventListener("change", (event) => {
    const files = Array.from(event.target.files);

    // Gabungkan file lama dan baru
    selectedFiles = [...selectedFiles, ...files];

    // Batasi jumlah maksimal
    if (selectedFiles.length > maxFiles) {
      selectedFiles = selectedFiles.slice(0, maxFiles);
    }

    updatePreview();
  });

  function updatePreview() {
    previewContainer.innerHTML = "";

    selectedFiles.forEach((file, index) => {
      const reader = new FileReader();
      reader.onload = function (e) {
        const imageWrapper = document.createElement("div");
        imageWrapper.className = "relative";

        const img = document.createElement("img");
        img.src = e.target.result;
        img.className = "w-20 h-20 object-cover rounded";

        const closeBtn = document.createElement("button");
        closeBtn.innerHTML = "Ã—";
        closeBtn.className =
          "absolute -top-2 -right-2 bg-red-600 text-white rounded-full w-5 h-5 text-xs flex items-center justify-center hover:bg-red-700";
        closeBtn.addEventListener("click", () => {
          selectedFiles.splice(index, 1);
          updatePreview(); // Refresh preview
        });

        imageWrapper.appendChild(img);
        imageWrapper.appendChild(closeBtn);
        previewContainer.appendChild(imageWrapper);
      };
      reader.readAsDataURL(file);
    });

    // Tambah tombol "+" jika ada file dan belum mencapai batas maksimal
    if (selectedFiles.length > 0 && selectedFiles.length < maxFiles) {
      addPlusButton();
    }
  }

  function addPlusButton() {
    const addButtonWrapper = document.createElement("div");
    addButtonWrapper.className =
      "w-20 h-20 flex items-center justify-center border-2 border-dashed border-gray-300 rounded cursor-pointer hover:bg-gray-100";
    addButtonWrapper.innerHTML =
      '<span class="text-2xl text-gray-500">+</span>';
    addButtonWrapper.addEventListener("click", () => {
      fileInput.click(); // Trigger input file
    });

    previewContainer.appendChild(addButtonWrapper);
  }
</script>


<script>
  document.addEventListener("DOMContentLoaded", () => {
    const buttons = document.querySelectorAll(".remove-btn");

    buttons.forEach(btn => {
      btn.addEventListener("click", async () => {
        const productId = btn.getAttribute("data-id");

        if (!confirm("Are you sure want to delete this product?")) return;

        try {
          console.log(productId);
          
          const response = await fetch(`/dashboard/product-list/delete?id=${productId}`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            }
          });

          if (response.ok) {
            // Hapus baris produk di tabel
            const row = document.getElementById(`product-${productId}`);
            if (row) row.remove();
            alert("Product deleted successfully.");
          } else {
            alert("Failed to delete product.");
          }
        } catch (error) {
          alert("Error deleting product.");
          console.error(error);
        }
      });
    });
  });
</script>
